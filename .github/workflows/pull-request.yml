# .github/workflows/pull-request.yml
name: Pull Request

on:
  pull_request:
    branches: [ main ]
    types: [opened, reopened, synchronize]

jobs:
  build-and-test-pr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Install dotnet-trx
      run: dotnet tool install -g dotnet-trx

    - name: Install .NET Aspire workload
      run: dotnet workload install aspire

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
      
    - name: Install dependencies and build the client
      working-directory: example/livedocs-client
      run: |
        npm ci
        npm run build

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Check Docker status before tests
      run: |
        docker ps -a
        docker system info
        docker version

    - name: Test with coverage
      run: |
        dotnet test ./tests/RxDBDotNet.Tests/RxDBDotNet.Tests.csproj \
          --configuration Release \
          --collect:"XPlat Code Coverage" \
          --settings coverlet.runsettings \
          --logger "console;verbosity=detailed" \
          --logger "trx;LogFileName=test-results.trx" \
          --results-directory ./TestResults
      timeout-minutes: 5

    - name: Check Docker status after tests
      if: always()
      run: |
        docker ps -a
        docker logs $(docker ps -aq --filter name=rxdbdotnet_test_db)
        docker logs $(docker ps -aq --filter name=rxdbdotnet_test_redis)

    - name: Display test results summary
      if: always()
      run: |
        echo "Test Results Summary:"
        dotnet-trx --output Compact ./TestResults/test-results.trx

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: ./TestResults

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        files: ./tests/RxDBDotNet.Tests/TestResults/*/coverage.lcov
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
      
    - name: Auto-label the PR
      uses: release-drafter/release-drafter@v5
      with:
        config-name: release-drafter.yml
        disable-releaser: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}