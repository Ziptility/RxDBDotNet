{
  "root": true,
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:@typescript-eslint/strict",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "next",
    "next/core-web-vitals",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": ["@typescript-eslint", "react", "react-hooks", "jsx-a11y", "import", "promise"],
  "rules": {
    // General Best Practices
    "eqeqeq": ["error", "always"],
    "no-console": "off",
    "no-debugger": "error",
    "no-eval": "error",
    "no-implied-eval": "error",
    "strict": ["error", "global"],
    "prefer-const": "error",

    // Promise Rules
    "promise/catch-or-return": "error",
    "promise/always-return": "error",
    "promise/no-return-wrap": "error",
    "promise/param-names": "error",
    "promise/no-new-statics": "error",
    "promise/no-return-in-finally": "error",
    "promise/valid-params": "error",

    // TypeScript-Specific Rules
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/explicit-function-return-type": ["error", { "allowExpressions": true }],
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/strict-boolean-expressions": "error",
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/ban-ts-comment": ["error", { "ts-ignore": "allow-with-description" }],
    "@typescript-eslint/require-await": "error",

    // React-Specific Rules
    "react/jsx-filename-extension": ["error", { "extensions": [".tsx"] }],
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react/no-unknown-property": "error",
    "react/jsx-key": "error",

    // React Hooks Rules
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",

    // Next.js Rules
    // "next/no-img-element": "error",
    // "next/no-html-link-for-pages": ["error", "./src/pages"],

    // Import Rules
    "import/order": [
      "error",
      {
        "newlines-between": "never",
        "groups": ["builtin", "external", "internal", ["parent", "sibling"], "index", "object", "type"],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "next/**",
            "group": "external",
            "position": "after"
          },
          {
            "pattern": "@/**",
            "group": "internal",
            "position": "after"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react", "next"],
        "alphabetize": { "order": "asc", "caseInsensitive": true }
      }
    ],
    "import/no-unresolved": "off",
    "import/no-extraneous-dependencies": ["error", { "devDependencies": false }],

    // Prettier Integration
    "prettier/prettier": "error"
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": {}
    }
  },
  "ignorePatterns": ["node_modules/", ".next/", "out/", "build/", "next.config.js"],
  "overrides": [
    {
      "files": ["next.config.js"],
      "parser": "espree",
      "parserOptions": {
        "ecmaVersion": 2020,
        "sourceType": "module"
      }
    }
  ]
}
